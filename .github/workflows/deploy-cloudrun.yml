name: Deploy to Cloud Run (Docker Build)

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: uplifted-water-273221
      SERVICE_NAME: totos-photos
      REGION: us-central1

    steps:
    - uses: actions/checkout@v3

    - name: Google Auth
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build Docker Image
      run: |
        docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} .

    - name: Push Docker Image
      run: |
        docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.SERVICE_NAME }} \
          --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
          --platform managed \
          --region ${{ env.REGION }} \
          --memory 128Mi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 2 \
          --concurrency 80 \
          --timeout 30s \
          --allow-unauthenticated \
          --set-env-vars="NODE_ENV=production"

    - name: Clean up old container images
      run: |
        # Keep only the 5 most recent versions
        IMAGE_PATH="gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}"
        DIGESTS=$(gcloud container images list-tags $IMAGE_PATH --format='get(digest)' --sort-by=~timestamp --limit=unlimited)
        DIGESTS_TO_DELETE=$(echo "$DIGESTS" | tail -n +6)
        
        if [ -n "$DIGESTS_TO_DELETE" ]; then
          echo "$DIGESTS_TO_DELETE" | xargs -I {} gcloud container images delete "$IMAGE_PATH@{}" --quiet
        fi